<launch> 
  <arg name="start_x_" value="-6.8"/>
  <arg name="start_y_" value="-6.1"/>
  <arg name="start_yaw_" value="0.0"/>

  <!-- Map resolution -->
  <arg name="gridmap_interval_" value="0.1"/> 

  <arg name="odom_topic" value="/simulation/pose" />

  <arg name="velocity_suffix" value="3ms_unknown"/>

  <!-- Whether the robot is allowed to see through obstacles -->
  <!-- <arg name="if_perspective_" value="true"/> -->
  <arg name="if_perspective_" value="false"/>

  <!-- Detection range -->
  <!-- <arg name="detection_range_" value="27.0"/> -->
  <arg name="detection_range_" value="7.0"/>


  <!-- Whether to limit the robot's FOV. Note: In complex environments, limiting the FOV may cause planning to fail -->
  <!-- <arg name="hrz_limited_" value="true"/> -->
  <arg name="hrz_limited_" value="false"/>

  <!-- FOV angle range -->
  <arg name="hrz_laser_range_dgr_" value="90.0"/>

  <arg name="shape_" value = "0" />

  <node name="global_planning" pkg="plan_manager" type="global_planning" output="screen">
    <rosparam file="$(find plan_manager)/config/car$(arg velocity_suffix).yaml" command="load"/>
    <rosparam file="$(find plan_env)/config/mapsim.yaml" command="load"/>
    <param name="start_x" value="$(arg start_x_)"/>
    <param name="start_y" value="$(arg start_y_)"/>
    <param name="start_yaw" value="$(arg start_yaw_)"/>

    <param name="replan_time" value="0.08 "/>
    <param name="max_replan_time" value="0.08"/>
    <param name="fixed" value="true"/>
    
    <!-- Map parameters -->
    <param name="gridmap_interval" value="$(arg gridmap_interval_)"/>
    <param name="path_gridmap_interval" value="0.05"/>
    <param name="detection_range" value="$(arg detection_range_)"/>
    <param name="global_x_lower" value="-10.0"/>
    <param name="global_x_upper" value="10.0"/>
    <param name="global_y_lower" value="-10.0"/>
    <param name="global_y_upper" value="10.0"/>
    <param name="if_perspective" value="$(arg if_perspective_)"/>
    <param name="if_cirSupRaycast" value="true"/>
    <remap from="local_pointcloud" to="/laser_simulator/local_pointcloud"/>
    <remap from="odom" to="$(arg odom_topic)"/>

    <!-- Observation parameters -->
    <param name="hrz_limited" value="$(arg hrz_limited_)"/>
    <param name="hrz_laser_range_dgr" value="$(arg hrz_laser_range_dgr_)"/>

    <!-- Front End Parameters-->
    <param name="horizen" value="15"/>
    <param name="shape" value="$(arg shape_)"/>

    <param name="threads_num" value = "4"/>
    <param name="max_acc" value = "8"  />
    <param name="max_vel" value = "2"   />
    <param name="omg_max" value = "1"  />
    <param name="alpha_max" value = "5.0"/>
  </node>

  <node name="simulator" pkg="simulator" type="simulator" output="screen">
    <rosparam file="$(find plan_manager)/config/car$(arg velocity_suffix).yaml" command="load"/>
    <param name="start_x" value="$(arg start_x_)"/>
    <param name="start_y" value="$(arg start_y_)"/>
    <param name="start_yaw" value="$(arg start_yaw_)"/>
    <param name="detection_range" value="$(arg detection_range_)"/>
    <param name="hrz_limited" value="$(arg hrz_limited_)"/>
    <param name="hrz_laser_range_dgr" value="$(arg hrz_laser_range_dgr_)"/>
 
    <param name="shape" value="$(arg shape_)"/>
  </node>

  <node name="global_map_node" pkg="simulator" type="global_map_node" output="screen" >
    <!-- Map input method -->
    <!-- 1: Read map from yaml file -->
    <!-- 2: Random obstacles -->
    <!-- 3: Get obstacles from png -->
    <param name="Map_input_method" value="2"/>
    <param name="if_boundary_wall" value="true"/>
    <!-- gridmap cell size -->
    <param name="gridmap_interval" value="$(arg gridmap_interval_)"/>
    <!-- Gridmap cell size sent to the radar -->
    <param name="laser_gridmap_interval" value="$(arg gridmap_interval_)"/>
    <!-- Read map parameters from yaml file -->
    <!-- Map file name -->
    <rosparam file="$(find plan_env)/config/obs5.yaml" command="load"/>
    <!-- Random obstacles -->
    <!-- Map file name -->
    <param name="start_x" value="$(arg start_x_)"/>
    <param name="start_y" value="$(arg start_y_)"/>
    <param name="start_yaw" value="$(arg start_yaw_)"/>
    <param name="srand_num" value="-1"/>
    <param name="Random/map_range/x_min" value="-10"/>
    <param name="Random/map_range/x_max" value="10"/>
    <param name="Random/map_range/y_min" value="-10"/>
    <param name="Random/map_range/y_max" value="10"/>
    <!-- Square obstacles -->
    <param name="Random/obstacle_box/num" value="200"/>
    <param name="Random/obstacle_box/length" value="0.1"/>
    <param name="Random/obstacle_box/safe_dis" value="1.8"/>
    <param name="srand_num" value="53257" />
    <!-- Get obstacles from png -->
    <param name="Png/file_path" value="$(find plan_env)/config/obs.png"/>
    <param name="Png/x_lower" value="-5.0"/>
    <param name="Png/y_lower" value="-5.0"/>
  </node>

  <group if="$(arg if_perspective_)">
    <node pkg="laser_simulator" type="laser_sim_node" name="laser_simulator" output="screen">
      <param name="if_perspective" value="$(arg if_perspective_)"/>
      <param name="pc_resolution" value="$(arg gridmap_interval_)"/>
      <param name="sensing_horizon" value="$(arg detection_range_)"/>
      <rosparam file="$(find laser_simulator)/config/perspective_laser.yaml" command="load" />
    </node>
  </group>
  <group unless="$(arg if_perspective_)">
    <node pkg="laser_simulator" type="laser_sim_node" name="laser_simulator" output="screen">
      <param name="if_perspective" value="$(arg if_perspective_)"/>
      <param name="pc_resolution" value="$(arg gridmap_interval_)"/>
      <param name="hrz_limited" value="$(arg hrz_limited_)"/>
      <param name="hrz_laser_range_dgr" value="$(arg hrz_laser_range_dgr_)"/>
      <rosparam file="$(find laser_simulator)/config/normal_laser.yaml" command="load" />
    </node>
  </group>

  <node name="controller_node" pkg="controller" type="controller_node" output="screen">
    <param name="some_parameter" value="some_value"/>
    <param name="start_x" value="$(arg start_x_)"/>
    <param name="start_y" value="$(arg start_y_)"/>
    <param name="start_yaw" value="$(arg start_yaw_)"/>
  </node>


  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find plan_manager)/rviz/rviz_sim.rviz" output="log"/>

</launch> 